/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2016-04-01 10:22:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.day0401;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class fileSelectForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 
	public String getParam(HttpServletRequest request, String paramName){
		if(request.getParameter(paramName)!=null){
			return request.getParameter(paramName);
		}else{
			return "";
		}
	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/day0401/view/color.jsp", Long.valueOf(1459494974198L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String bodyback_c="#e0ffff";
	String back_c="#8fbc8f";
	String title_c="#5f9ea0";
	String value_c="#b0e0e6";
	String bar="#778899";

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");
	int filecounter = 0;
	if(request.getParameter("addcnt")!=null){
		filecounter = Integer.parseInt(request.getParameter("addcnt"));
	}

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>여러개의 파일을 업로드하는 예제</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script language=\"JavaScript\">\r\n");
      out.write("\r\n");
      out.write("function addFile(formName){\r\n");
      out.write("\tif(formName.addcnt.value==\"\"){\r\n");
      out.write("\t\talert(\" 입력할 파일 갯수를 입력하고 확인 단추를 눌러주세요\" ); \r\n");
      out.write("\t\tformName.addcnt.focus();\t\t\t\t\t\t \r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tformName.submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function elementCheck(formName){\r\n");
      out.write("   paramIndex = 1; \r\n");
      out.write("   for(idx=0; idx<formName.elements.length; idx++){\r\n");
      out.write("      if(formName.elements[idx].type == \"file\"){\r\n");
      out.write("         if(formName.elements[idx].value==\"\"){\r\n");
      out.write("\t        var message = paramIndex+\" 번째 파일정보가 없습니다.\\n업로드할 파일을 선택해 주세요\";\r\n");
      out.write("\t\t    alert(message);\r\n");
      out.write("\t\t\tformName.elements[idx].focus();\r\n");
      out.write("\t\t\treturn;\t\t\r\n");
      out.write("\t     }\r\n");
      out.write("\t     paramIndex++; \r\n");
      out.write("      }\r\n");
      out.write("   }\r\n");
      out.write("   formName.action = \"fileSelectPro.jsp\";\r\n");
      out.write("   formName.submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"");
      out.print(bodyback_c);
      out.write("\">\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("<h2>여러개의 파일을 업로드하는 예제</h2>\r\n");
      out.write("<font color=\"#0000ff\" size=\"2\">파일 갯수를 입력한 후 [확인] 단추를 눌러주세요.<br>\r\n");
      out.write("입력이 완료되면 파일업로드를 위한 [업로드] 단추를 눌러주세요.</font></div><br>\r\n");
      out.write("<form name=\"frmName1\" method=\"post\">\r\n");
      out.write("<table width=\"50%\" border=\"1\" align=\"center\" cellpadding=\"1\" cellspacing=\"1\">\r\n");
      out.write("<tr>\r\n");
      out.write("    <td width=\"15%\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">작성자</td>\r\n");
      out.write("    <td><input type=\"text\" name=\"user\" value=\"");
      out.print(getParam(request, "user"));
      out.write("\"></td></tr>\r\n");
      out.write("<tr><td width=\"15%\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">제목</td>\r\n");
      out.write("    <td><input type=\"text\" name=\"title\" value=\"");
      out.print(getParam(request, "title"));
      out.write("\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td width=\"15%\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">내용</td>\r\n");
      out.write("\t<td width=\"50%\" colspan=\"3\">\r\n");
      out.write("\t<textarea name=\"abstract\" cols=\"40\">");
      out.print(getParam(request,"abstract"));
      out.write("</textarea>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"4\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">\r\n");
      out.write("\t업로드할 파일 수 입력\r\n");
      out.write("\t<input type=\"Text\" name=\"addcnt\">\r\n");
      out.write("\t<input type=\"button\" value=\" 확인 \" onclick=\"addFile(this.form)\">\r\n");
      out.write("\t\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<form name=\"frmName2\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("<table width=\"50%\" border=\"1\" align=\"center\" cellpadding=\"1\" cellspacing=\"1\" >\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td width=\"40%\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"txtUser\" value=\"");
      out.print(getParam(request, "user"));
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"txtTitle\" value=\"");
      out.print(getParam(request, "title"));
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"txtAbstract\" value=\"");
      out.print(getParam(request,"abstract"));
      out.write("\">\r\n");
      out.write("\t");
	for(int i=0; i<filecounter; i++){
      out.write("\r\n");
      out.write("\t<input type=\"File\" size=\"50\" name=\"selectFile");
      out.print(i);
      out.write("\"><br>\t \t\r\n");
      out.write("\t\t \t\r\n");
      out.write("\t");
	}
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"Button\" value=\"업로드\" onclick=\"elementCheck(this.form)\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
