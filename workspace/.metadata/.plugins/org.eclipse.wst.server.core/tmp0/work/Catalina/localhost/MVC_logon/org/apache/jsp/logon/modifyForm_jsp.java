/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2016-04-11 07:31:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.logon;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.*;

public final class modifyForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/logon/color.jsp", Long.valueOf(1460348228000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("board");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');

String bodyback_c="#e0ffff";
String back_c="#8fbc8f";
String title_c="#5f9ea0";
String value_c="#b0e0e6";
String bar="#778899";

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title> 회원정보수정 </title>\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("<script language=\"JavaScript\">\n");
      out.write("\tfunction checkIt(){\n");
      out.write("\t\tvar userinput=eval(\"documnet.userinput\");\n");
      out.write("\t\tif(!userinput.passwd.value){\n");
      out.write("\t\t\talert(\"비밀번호를 입력하세요.\");\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\t\tif(userinput.passwd.value != userinput.passwd2.value){\n");
      out.write("\t\t\talert(\"비밀번호를 동일하게 입력하세요.\");\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\t\tif(!userinput.username.value){\n");
      out.write("\t\t\talert(\"사용자 이름을 입력하세요.\");\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\t\tif(!userinput.jumin1.value || !userinput.jummin2.value){\n");
      out.write("\t\t\talert(\"주민번호를 입력하세요.\");\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\tfunction zipCheck(){\n");
      out.write("\t\turl=\"ZipCheck.go?check=y\";\n");
      out.write("    \t\n");
      out.write("    \twindow.open(url,\"post\",\"toolbar=no ,width=500 ,height=300,directories=no,status=yes,scrollbars=yes,menubar=no\");\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("</head>\n");

	String id = (String)session.getAttribute("memId");
	LogonDBBean manager = LogonDBBean.getInstance();
	LogonDataBean c = manager.getMember(id);
	try{

      out.write("\n");
      out.write("<body bgcolor=\"");
      out.print(bodyback_c);
      out.write("\">\n");
      out.write("<form method=\"post\" action=\"modifyPro.go\" name=\"userinput\" onsubmit=\"return checkIt()\">\n");
      out.write("\n");
      out.write("\t<table width=\"600\" border=\"1\" cellspacing=\"0\" cellpadding=\"3\"  align=\"center\">\n");
      out.write("    \t<tr>\n");
      out.write("      \t\t<td  colspan=\"2\" height=\"39\" bgcolor=\"");
      out.print(title_c);
      out.write("\" align=\"center\">\n");
      out.write("     \t\t\t<font size=\"+1\" ><b>회원 정보수정</b></font>\n");
      out.write("     \t\t</td>\n");
      out.write("    \t</tr>\n");
      out.write("    \t<tr>\n");
      out.write("      \t\t<td colspan=\"2\" class=\"normal\" align=\"center\">회원의 정보를 수정합니다.</td>\n");
      out.write("    \t</tr>\n");
      out.write("     \t<tr>\n");
      out.write("      \t\t<td width=\"200\" bgcolor=\"");
      out.print(value_c);
      out.write("\"><b>아이디 입력</b></td>\n");
      out.write("      \t\t<td width=\"400\" bgcolor=\"");
      out.print(value_c);
      out.write("\"> </td>\n");
      out.write("    \t<tr> \n");
      out.write("\n");
      out.write("    \t<tr>\n");
      out.write("      \t\t<td  width=\"200\"> 사용자 ID</td>\n");
      out.write("      \t\t<td  width=\"400\">");
      out.print(c.getId());
      out.write("</td>\n");
      out.write("    \t</tr>\n");
      out.write("   \n");
      out.write("     <tr>\n");
      out.write("      <td width=\"200\"> 비밀번호</td>\n");
      out.write("      <td width=\"400\">\n");
      out.write("        <input type=\"password\" name=\"passwd\" size=\"10\" maxlength=\"10\" value=\"");
      out.print(c.getPasswd());
      out.write("\">\n");
      out.write("      </td>\n");
      out.write("    <tr> \n");
      out.write("    <tr>\n");
      out.write("      <td  width=\"200\" bgcolor=\"");
      out.print(value_c);
      out.write("\"><b>개인정보 입력</b></td>\n");
      out.write("      <td width=\"400\" bgcolor=\"");
      out.print(value_c);
      out.write("\"> </td>\n");
      out.write("    <tr> \n");
      out.write("    <tr>\n");
      out.write("      <td   width=\"200\">사용자 이름</td>\n");
      out.write("      <td  width=\"400\">\n");
      out.write("        <input type=\"text\" name=\"name\" size=\"15\" maxlength=\"20\" value=\"");
      out.print(c.getName());
      out.write("\">\n");
      out.write("      </td>\n");
      out.write("    </tr>\n");
      out.write("    <tr>\n");
      out.write("      <td width=\"200\">주민등록번호</td>\n");
      out.write("      <td width=\"400\">\n");
      out.write("        ");
      out.print(c.getJumin1());
      out.write('-');
      out.print(c.getJumin2());
      out.write("\n");
      out.write("      </td>\n");
      out.write("    </tr>\n");
      out.write("   <tr>\n");
      out.write("      <td width=\"200\">E-Mail</td>\n");
      out.write("      <td width=\"400\">\n");
      out.write("\t\t");
if(c.getEmail()==null){
      out.write("\n");
      out.write("  \t\t<input type=\"text\" name=\"email\" size=\"40\" maxlength=\"30\" >\n");
      out.write("\t\t");
}else{
      out.write("\n");
      out.write("        <input type=\"text\" name=\"email\" size=\"40\" maxlength=\"30\" value=\"");
      out.print(c.getEmail());
      out.write("\">\n");
      out.write("\t\t");
}
      out.write("\n");
      out.write("      </td>\n");
      out.write("    </tr>\n");
      out.write("    <tr>\n");
      out.write("    \t<td width=\"200\">Blog</td>\n");
      out.write("    \t<td width=\"400\">\n");
      out.write("    \t");
if(c.getBlog()==null){
      out.write("\n");
      out.write("  \t\t\t<input type=\"text\" name=\"blog\" size=\"60\" maxlength=\"50\" >\n");
      out.write("\t\t");
}else{
      out.write("\n");
      out.write("        \t<input type=\"text\" name=\"blog\" size=\"60\" maxlength=\"50\" value=\"");
      out.print(c.getBlog());
      out.write("\">\n");
      out.write("\t\t");
}
      out.write("\n");
      out.write("      \t</td>\n");
      out.write("    </tr>   \n");
      out.write("\t<tr> \n");
      out.write("       \t<td width=\"200\">우편번호</td>\n");
      out.write("       \t<td> \n");
      out.write("\t\t");
if(c.getZipcode()==null){
      out.write("\n");
      out.write("\t\t\t<input type=\"text\" name=\"zipcode\" size=\"7\" readonly>\n");
      out.write("\t\t");
}else{
      out.write("\n");
      out.write("          \t<input type=\"text\" name=\"zipcode\" size=\"7\" readonly value=\"");
      out.print(c.getZipcode());
      out.write("\">\n");
      out.write("\t\t");
}
      out.write("\n");
      out.write("       \t\t<input type=\"button\" value=\"우편번호찾기\" onClick=\"zipCheck()\">우편번호를 검색하세요.\n");
      out.write("\t\t</td>\n");
      out.write("    </tr>\n");
      out.write("    <tr> \n");
      out.write("       <td>주소</td>\n");
      out.write("       ");

       if(c.getAddress()==null){
      out.write("\n");
      out.write("      \t<td>\n");
      out.write("      \t<input type=\"text\" name=\"address\" size=\"70\">      주소를 적어 주세요.\n");
      out.write("      \t</td>\n");
      out.write("      \t");
}else{ 
      out.write("\n");
      out.write("      \t<td>\n");
      out.write("      \t<input type=\"text\" name =\"address\" size=\"70\" value=\"");
      out.print(c.getAddress() );
      out.write("\"> \n");
      out.write("      \t</td>\n");
      out.write("      \t");
} 
      out.write("\n");
      out.write("    </tr>  \n");
      out.write("    <tr>\n");
      out.write("      \t<td colspan=\"2\" align=\"center\" bgcolor=\"");
      out.print(value_c);
      out.write("\">\n");
      out.write("       \t\t<input type=\"submit\" name=\"modify\" value=\"수   정\" >\n");
      out.write("       \t\t<input type=\"button\" value=\"취  소\" onclick=\"javascript:window.location='main.go'\">     \n");
      out.write("      \t</td>\n");
      out.write("    </tr>\n");
      out.write("  </table>\n");
      out.write("</form>\n");
      out.write("</body>\n");
} catch (Exception e){} 
      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
