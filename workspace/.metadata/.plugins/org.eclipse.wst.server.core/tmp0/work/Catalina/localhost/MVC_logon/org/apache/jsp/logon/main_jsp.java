/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2016-04-11 07:25:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.logon;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/logon/color.jsp", Long.valueOf(1460348228000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

String bodyback_c="#e0ffff";
String back_c="#8fbc8f";
String title_c="#5f9ea0";
String value_c="#b0e0e6";
String bar="#778899";

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title> 메인입니다. </title>\n");
      out.write("<link href=\"style.css\" rel= \"stylesheet\" type = \"text/css\">\n");
      out.write("\n");

try{
	if(session.getAttribute("memId")==null){
      out.write(" <!-- 로그온이 되지 않았을 경우 -->\n");
      out.write("<script>\n");
      out.write("function focusIt()\n");
      out.write("{     \n");
      out.write("   document.inform.id.focus();//내가 작업하고 있는 문서의 inform이라는 곳에 id에 커서를 가져다 줌\n");
      out.write("}\n");
      out.write("\n");
      out.write("function checkIt()\n");
      out.write("{\n");
      out.write("   inputForm=eval(\"document.inform\");\n");
      out.write("   if(!inputForm.id.value){\n");
      out.write("     alert(\"아이디를 입력하세요..\");\n");
      out.write("inputForm.id.focus();\n");
      out.write("return false;\n");
      out.write("   }\n");
      out.write("   if(!inputForm.passwd.value){\n");
      out.write("     alert(\"패스워드를 입력하세요..\");\n");
      out.write("inputForm.passwd.focus();\n");
      out.write("return false;\n");
      out.write("   }\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body onLoad=\"focusIt();\" bgcolor=\"");
      out.print(bodyback_c);
      out.write("\">\n");
      out.write("  <table width=500 cellpadding=\"0\" cellspacing=\"0\"  align=\"center\" border=\"1\" >\n");
      out.write("      <tr>\n");
      out.write("       <td width=\"300\" bgcolor=\"");
      out.print(bodyback_c);
      out.write("\" height=\"20\">\n");
      out.write("       &nbsp;\n");
      out.write("       </td>\n");
      out.write("  \n");
      out.write("       <form name=\"inform\" method=\"post\" action=\"loginPro.go\"  onSubmit=\"return checkIt();\">\n");
      out.write("\n");
      out.write("        <td bgcolor=\"");
      out.print(title_c);
      out.write("\"  width=\"100\" align=\"right\">아이디</td>\n");
      out.write("        <td width=\"100\" bgcolor=\"");
      out.print(value_c);
      out.write("\">\n");
      out.write("            <input type=\"text\" name=\"id\" size=\"15\" maxlength=\"10\"></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr >\n");
      out.write("         <td rowspan=\"2\" bgcolor=\"");
      out.print(bodyback_c);
      out.write("\" width=\"300\" >메인입니다.</td>\n");
      out.write("         <td bgcolor=\"");
      out.print(title_c);
      out.write("\"  width=\"100\" align=\"right\">패스워드</td>\n");
      out.write("         <td width=\"100\" bgcolor=\"");
      out.print(value_c);
      out.write("\">\n");
      out.write("            <input type=\"password\" name=\"passwd\" size=\"15\" maxlength=\"10\"></td>\n");
      out.write("       </tr>\n");
      out.write("       <tr>\n");
      out.write("          <td colspan=\"3\" bgcolor=\"");
      out.print(title_c);
      out.write("\"   align=\"center\">\n");
      out.write("            <input type=\"submit\" name=\"Submit\" value=\"로그인\">\n");
      out.write("            <input type=\"button\"  value=\"회원가입\" onclick=\"javascript:window.location='inputForm.go'\">\n");
      out.write("          </td></form></tr></table>\n");
      out.write("     ");
}else{
      out.write("\n");
      out.write("       <table width=500 cellpadding=\"0\" cellspacing=\"0\"  align=\"center\" border=\"1\" >\n");
      out.write("         <tr>\n");
      out.write("           <td width=\"300\" bgcolor=\"");
      out.print(bodyback_c);
      out.write("\" height=\"20\">하하하</td>\n");
      out.write("\n");
      out.write("           <td rowspan=\"3\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">\n");
      out.write("             ");
      out.print(session.getAttribute("memId"));
      out.write("님이 <br>\n");
      out.write("             방문하셨습니다\n");
      out.write("             <form  method=\"post\" action=\"logout.go\"> \n");
      out.write("             <input type=\"submit\"  value=\"로그아웃\">\n");
      out.write("             <input type=\"button\" value=\"회원정보변경\" onclick=\"javascript:window.location='modify.go'\">\n");
      out.write("             </form>\n");
      out.write("         </td>\n");
      out.write("        </tr>\n");
      out.write("       <tr >\n");
      out.write("         <td rowspan=\"2\" bgcolor=\"");
      out.print(bodyback_c);
      out.write("\" width=\"300\" >메인입니다.</td>\n");
      out.write("      </tr>\n");
      out.write("     </table>\n");
      out.write("     <br>\n");
}
}catch(NullPointerException e){}

      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
