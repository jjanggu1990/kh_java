class 는 코드
객체(object)는 코드를 메모리에 적재해서 사용 할 수 있는 상태



파일명과 main 메소드가 있는 클래스의 이름을 맞춰 주어야 사용 가능.

파일명과 같은 클래스에서 main 메소드를 찾기 때문.

멤머 : 멤머변수 와 메소드 통칭.

참조변수.  "." 으로 멤버 접근

참조변수 (reference variable)

하나의 객체를 여러개의 참조변수가 주소값을 저장해 가리킬 수 있다.
하지만, 참조변수 더 이상 주소값을 갖고 있지 않을 경우 GC(Garbage Collector)가
메모리를 초기화 시키며 사라진다. 그러므로 더 이상 접근이 불가능하다.


참조변수도 변수이기 때문에 저장되는 값은 오직 하나뿐임
하나의 참조변수가 여러개의 객체를 가르킬 수 없음


변수 -> 배열 -> 구조체 -> 클래스



변수의 종류

인스턴스 변수 -> 인스턴스화 시
static 변수 -> 클래스가 메모리에 올라 갈때
지역 변수


class의 실행순서

1. class 정보 로딩(헤더정보나 갯수 등)
2. static 멤버 로딩 (ex: main, api satic 멤버)
3. main 메소드 호출(실행)
4. 객체 생성 -> 인스턴스멤버 로딩
5. 메서드 호출 -> 지역변수 로딩
메소드 종료 -> 지역변수 소멸
메인메소드 종료 -> 지역변수 소멸


메소드(method)
작업을 수행하기 위한 명령문의 집합

- 반복적인 코드를 줄이고 코드의 관리 용이
- 하나의 메소드는 한 가지 기능만 수행하도록 작성하는 것이 좋다.


return 이 있는 메소드에서는
지역변수를 많이 만들고 return문을 최소화 하는 것이 더 좋은 코드이다.


매개변수도 자동 캐스팅이 됨

매개변수로 참조변수(배열이나 객체 등)를 주게 되면 주소값을 공유 하므로
직접 값을 지정해 줄 수 있음
call by reference
